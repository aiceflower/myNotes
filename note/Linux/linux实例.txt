1.LINUX常识
	a.Linux严格区分大小写
	b.LInux中所有内容都是以文件形式保存，包括硬件
	c.Linux不靠扩展名来区分文件类型
	e.常用目录作用
		1)/ 根目录
		2)/bin  命令保存目录 （普通用户就可以读取的命令）
		3)/boot 启动目录，启动相关文件
		4)/dev 设备文件保存目录
		5)/etc 配置文件保存目录
		6)/home 普通用户的家目录
		7)/lib 系统库保存目录
		8)/mnt 系统挂载目录
		9)/media 挂载目录
		11)/root	超级用户家目录
		12)/tmp		临时目录
		13)/sbin	命令保存目录 (超级用户才能使用的命令)
		14)/proc 和 /sys	直接写入内存的目录
		15)/usr	 系统软件资源目录
			/usr/bin系统命令普通用户
			/usr/sbin/系统命令 超级用户
		16)/var 系统相关文档内容
	f.搜索命令
		1)文件搜索命令locate 在后台中按文件名搜索，速度快 数据库：/var/lib/mlocate 更新数据库：updatedb
		2)命令搜索命令whereis 和which whereis:搜索命令-b和帮助文档-m所在位置 which:搜索命令所在位置和别名
		3)文件搜索命令find
		4)字符串搜索命令grep
2.

3.ls命令
	用法：ls [选项] [文件或目录]
	选项：
		-a：显示所有文件，包括隐藏文件
		-l：显示详细信息
		-d：查看目录属性
		-h：人性化显示文件大小
		-i：显示inode	i节点
4.cd命令 change directory
	用法：cd [目录]
	简化操作：
		cd ~ 进入当前用户家目录
		cd / 进入根目录
		cd - 进入上次目录
		cd .. 进入上级目录
5.rm命令   remove
	用法：rm [选项] [文件或目录]
	选项：
		-r 删除目录
		-f 强制
	常用：rm -rf [文件或目录]
6.cp命令
	用法：cp [选项] [源] [目标]
	选项：
		-r 复制目录
		-p 连带文件属性复制
		-d  若源文件是链接文件，则复制链接属性
		-a  相当于 -pdr
7.mv命令 move  剪切或重命名
	用法：mv [源] [目标]
8.ln命令 link
	用法：ln[选项] [源] [目标]
	硬链接：ln 源  目标
	软链接：ln -s 源 目标
	软硬链接区别：
		硬：拥有相同的i节点和存储block块，可以看做是同一个文件
			可通过i节点识别
			不能跨分区
			不能针对目录使用
			修改任意文件，另一个都改变
			删除原文件，硬链接还可使用
		软：类似windows的快捷方式
			拥有自己的节点和block块，但是数据块中只保存原文件的文件名和节点号，并没有实际的文件数据。
			lrwxrwxrwx 软链接文件权限都为 lrwxrwxrwx
			修改任意文件，另一个都改变
			删除原文件，软链接不能使用
9.find命令
	用法：find [搜索范围] [搜索条件]
	例：find / -name 文件名 （可以使用通配符 * ? []）
		find /root -iname 文件名 不区分大小写
		find /root -user root 按照所有者搜
		find /root -nouser 查找没有所有者的文件
		find /var/log/ -mtime +10 查找10天前修改的文件
			-10 10天内   +10 10天前  10 10天当天
			atime 文件访问时间  ctime 改变文件属性  mtime 修改文件内容
		find -size 25k 查找文件大小是25k的文件
			-25 小于25k  +25 大于25k  25 等于25k
		find -inum 24323 查找节点是24323的文件
		find /etc -size +25k -a -size -50k 查找etc目录下所有大于25k并且小于50k的文件
			a and 逻辑与	o or 逻辑或
		find /etc -size +25k -a -size -50k -exec ls -lh {} \; 查找etc目录下所有大于25k并且小于50k的文件,并显示详细信息
			-exec/-ok 命令 {} \;对搜索结果执行操作
10.grep 搜索字符串
	用法：grep [选项] 字符串 文件名
	选项：-i 忽略大小写  -v 排除指定字符串
11.man 获取指令命令的帮助
	级别：
		1 ：查看命令的帮助
		2 ：查看可被内核调用的函数的帮助
		3 ：查看函数和函数库的帮助
		4 ：查看特殊文件的帮助，主要是/dev目录下的文件
		5 ：查看配置文件的帮助
		6 ：查看游戏的帮助
		7 ：查看其它杂项的帮助
		8 ：查看系统管理员可用命令的帮助
		9 ：查看和内核相关文件的帮助
	man -f 相当于 whatis 命令 查看命令拥有哪个级别的帮助
	例：man -5 passwd
		man -4 null
		man -8 ifconfig
	man -k 相当于 apropos 查看和命令相关的所有帮助
		apropos passwd
	
12.help sheel内部命令帮助
	info ： 回车进入子帮助页面 带*
			u 进入上层页面
			n 进入下一个帮助小节
			p 进入上一个帮助小节
			q 退出
13.文件压缩与解压 常见：.zip .gz .bz2 .tar.gz  .tar.bz2
	zip:
		压：
			zip 压缩文件名 源文件 （压缩文件）
			zip -r 压缩文件名 源目录 （压缩目录）
		解：
			unzip 压缩文件
	gz：
		压：
			gzip 源文件  （源文件会消失）
			gzip -c 源文件 > 压缩文件 （源文件不会消失）
			gzip -r 目录 （压缩目录下所有文件，但是不能压缩目录）
		解：
			gzip -d 压缩文件
			gunzip 压缩文件
	bz2：
		压：
			bzip2 源文件 （不保留源文件）
			bzip2 -k 源文件 （保留源文件）
			bzip2命令不能压缩目录
		解：
			bzip2 -d 压缩文件   （-k 保留压缩文件）
			bunzip2 压缩文件  （-k 保留压缩文件）
14.tar 打包命令
	用法：压：tar [选项] 打包文件名 源文件
	选项：
		-c 打包
		-v 显示过程
		-f 指定打包后的文件名
	tar -cvf  test.tar  test
	
	解： tar -xvf 打包文件名  -x 解打包
		 tar -xvf test.tar
	压：tar -zcvf 压缩包名.tar.gz  源文件  -z 	压缩为.tar.gz格式  -x 解压缩.tar.gz格式
	解： tar -xcvf test.tar.gz 
	其实:.tar.gz格式是先打包为.tar格式,再压缩为.gz格式
	
	压：tar -jcvf 压缩包名.tar.bz2  源文件
		-z :压缩为.tar.bz2格式
		-x :解压缩.tar.bz2格式
15.标准的输入输出设备
	设备	设备文件名	文件描述符	类型
	键盘	/dev/stdin	    0   	标准输入
	显示器	/dev/sdtout     1 		标准输出
	显示器	/dev/sdterr		2		标准错误输出
16.输出重定向
	正确命令 > 文件 以覆盖的方式，把命令的正确输出，输出到指定文件
	正确命令 >> 文件 以追加的方式...
	错误命令 2>文件  以覆盖的方式，把命令的错误输出，输出到指定文件
	错误命令 2>>文件	以追加的方式...
	正确和错误同时保存：
		命令 > 文件 2>&1 以覆盖的方式，把正确和错误输出保存到同一个文件中
		命令 >> 文件 2>&1 以追加的方式...
		命令 &>文件   以覆盖的方式，把正确和错误输出保存到同一个文件中
		命令 &>>文件   以追加的方式，把正确和错误输出保存到同一个文件中
		命令>>正确文件 2>>错误文件  正确追加到正确文件，错误...
	输入重定向：
		wc [选项名] [文件名]
		-c 统计字节数
		-w 统计单词数
		-l 统计行数
17.shutdown 
	用法：shutdown [选项] 时间
	选项：
		-c 取消前一个关机命令
		-h 关机
		-r 重启
	其它关机命令：halt  poweroff init 0
	其它重启命令： reboot init 6
18.系统运行级别
	0 关机
	1 单用户
	2 不完全多用户 ，不含NFS服务
	3 完全多用户
	4 未分配
	5 图形界面
	6 重启
	runlevel 查询系统运行级别
	上一个级别 当前级别
	级别文件 /etc/inittab 修改系统运行级别
19.mount 挂载命令格式
	用法 ： mount [-t 文件系统] [-o特殊选项] 设备文件名 挂载点
	选项：
		-t ：文件系统：加入文件系统类型来指定挂载的类型，可以ext3，ext4，iso9660等文件系统
		-o ：特殊选项：可以指定挂载的额外选项
		参数										说明
		atime/noatime		更新访问时间/不更新访问时间。访问分区文件时，是否更新文件的访问时间，默认为更新。
		async/sync			异步/同步，默认为异步
		auto/noauto			自动/手动，mount -a 命令执行时，是否会自动安装/etc/fstab文件内容挂载，默认为自动
		defaults			定义默认值，相当于rw，suid，dev，exec，auto，nouser，async这七个点
		exec/noexec			执行/不执行，设定是否允许在文件系统中执行可执行文件，默认是exec允许
		remount				重新挂载已经挂载的文件系统，一般用于指定修改特殊权限
		rw/ro				读写/只读，文件系统挂载时，是否具有读写权限，默认是rw
		suid/nosuid			具有/i 具有SUID权限，设定文件系统是否具有SUID和SGID的权限，默认是具有
		user/nouser			允许/不允许普通用户挂载，设定文件系统是否允许普通用户挂载，默认是不允许
		usrquota			写入代表文件系统支持用户磁盘配额，默认不支持
		grpquota			写入代表文件系统支持组磁盘配额，默认不支持
	例：
		mount -o remount,noexec /home 记得改回来 mount -o remount,exec /home
20.挂载光盘
	mkdir /mnt/cdroom 建立挂载点
	mount -t iso99660 /dev/sr0  /mnt/cdrom
	卸载：umount 设备文件名或挂载点 umount /mnt/cdrom
	挂载U盘
		fdisk -l 查看U盘设备文件名
		mount -t vfat /dev/sdb1  /mnt/usb
		linux默认是不支持NTFS文件系统的
21.w 查看登陆用户信息
	用法：w 用户名
	命令输出：
		user：登陆用户名
		TTY：登陆终端
		FROM：从哪个IP地址登陆
		LOGIN@:登陆时间
		IDLE:用户闲置时间
		JCPU：批的是和该终端连接的所有进程占用的时间。这个时间里并不包括过去和后台作业时间，但却包括当前正在运行的后台作业所占用的时间
		PCPU：当前进程所占用的时间
		WHAT：当前正在运行的命令
	用法：who 用户名
		命令输出：
			用户名
			登录终端
			登陆时间(登陆来源IP地址)
	查询当前登陆和过去登录的用户信息
	last  last默认是读取/var/log/wtmp文件数据
	命令输出
		用户名
		登录终端
		登录ip
		登录时间
		退出时间（在线时间）
	lastlog 查询所有用户的最后一次登录时间 默认是/var/log/lastlog文件内容
	命令输出
		用户名
		登录终端
		登录ip
		最后一次登录时间
22.查看linux支持的sheel  vi /etc/shells
23.echo输出命令
	用法：
		echo [选项] [输出内容]
	选项：
		-e 支持反斜线控制的字符转换
		\a输出警告音
		\b退格键
		\n换行符
		\r回车符
		\t制表符
		\v垂直制表符
		\0nnn按照八进制ASCLL码输出字符。
		\xhh按照十六进制ASCLL码表输出字符。
	例：
		echo -e "\e[1;31m 你是个好人 \e[0m "
		30m=黑色，31m=红色，32m=绿色，33m=黄色
		34m=蓝色，35m=洋红，36m=青色，37m=白色
24.脚本执行
	1.赋予执行权限 chmod 755 hello.sh 2.  ./hello.sh
	或 bash hello.sh
25.alias
	用法：
		alias  查看系统中所有的命令别名
		alias 别名 = '原命令'
	别名永久生效与删除
		vi ~/.bashrc
	删除别名：unalias 别名
26.命令生效顺序
	1.用绝对或相对路径执行的命令
	2.别名
	3.Bash的内部命令
	4.按照$path环境变量定义的目录查找顺序找到的第一个命令
27.history 
	用法：history [选项] [历史命令保存文件]
	选项：-c:清空历史命令
		  -w:把缓存中的历史命令写入历史命令保存文件 ~/.bash_history
	历史命令调用：
		上下箭头
		！n 第n条历史命令
		！！上一条历史命令
		！字符串 最后一条以该字串开头的命令
28.多命令执行顺序
	命令1;命令2;...    命令顺序执行之前没有逻辑关系
	命令1&&命令2&&...   与  命令1正确执行命令2才执行
	命令1||命令2||...   或  命令1执行错误命令2才执行
29.vi编辑器
	操作模式：命令模式、输入模式、底行模式
	vim相对于vi提升
		vim支持多级撤销
		vim支持语法高亮
		vim支持图形界面
		vim可以跨平台运行
30.df 查看磁盘分区使用状况
	-l	仅显示本地磁盘(默认)
	-a	显示所有文件系统的磁盘使用情况，包含比如/proc/
	-h	以1024进制计算最合适的单位显示磁盘容量
	-H	以1000进制计算最合适的单位显示磁盘容量
	-T	显示磁盘分区类型
	-t	显示指定类型文件系统的磁盘分区
	-x 	不显示指定类型文件系统的磁盘分区
	磁盘管理
		du统计磁盘上的文件大小
		-b 以byte为单位统计文件
		-k 以KB为单位统计文件
		-m 以MB为单位统计文件
		-h 以1024进制以最合适的单位统计文件
		-H 以1024进制计算最合适的单位统计文件
		-s 指定统计目标
31.分区
	1.主分区和扩展分区不能超过四个
	2.扩展分区最多只能有一个
	3.扩展分区不能直接存取数据
	4.在扩展分区内部建立逻辑分区后才能存取数据
32.添加硬盘
	步骤：
		1.关机 2.添加硬盘  3.对硬盘进行分区 4.格式化分区  5.挂载硬盘分区
分区：
	fdisk分区：root用户
		1.fdisk -l  列出磁盘分区
		2.fdisk /dev/sdb  设备路径 进入分区模式
		3.进入后输入m来获取帮助 (n添加分区，p查看分区，d删除分区，w写入分区并退出)
		4.输入n 来添加分区，之后出来两个 e （代表扩展分区）和 p（代表主分区） 
			添加主分区 p -->指定分区编号（默认为1）-->输入扇区起始和终止位置（默认为最小开始，终止用 +3000M到分到3000M大小）
			添加扩展分区 n-->e-->2-->起始（默认)-->终止（默认最后位置扇区）
				添加扩展分区后再输入n后e（扩展分区已经不见了，因为扩展分区只能有一个）
				出现了l（逻辑分区）和p（主分区）
			添加逻辑分区 l-->扇区起始-->扇区结束...
		5.输入p来查看已经添加的分区
		6.认为添加结束后输入w写入分区
	硬盘分区模式：
		MBR:	
			主分区不超过4个
			单个分区容量最大2TB
		GPT：（parted分区工具）这种模式没有主分区，扩展分区，逻辑分区之分，就叫分区
			主分区个数几乎没有限制(主分区不适合安装X86框架的系统即32位系统)
			单个分区容量几乎没有限制 18EB 1EB=1024PB 1PB=1024TB 1TB=1024GB
		fdisk分区工具只能做MBR分区
		parted分区工具即可以做MBR分区又可做GPT分区
	parted分区：root用户
		1.输入parted
		2.输入help来获取帮助
		3.切换目标磁盘select /dev/sdc(目标磁盘位置)
		4.选择分区表类型mklabel msdos（MBR类型） 或 mklabel gpt（GPT类型）
		5.输入print查看分区表详细信息 print all查看全部
		6.parted有两种分区模式 1.交互模式（不用记，但是步骤多）2.命令模式
			1)交互模式 
				mkpart
				输入分区名称，默认为空
				输入文件系统类型
				从哪儿开始：从第几MB开始（这里是M之前的是扇区）
				结束
			2)命令模式 
				mkpart 分区名称  [文件系统类型] 开始  结束
			  删除分区 rm 分区编号  如 rm 3
			 默认采用 MB 来分 如果想用GB来分可以使用 unit GB命令
			 输入 quit退出 不用输入w来保存分区表，gpt模式是立即保存的
格式化分区
	ll /dev/sdb* 查看分区
	
	mkfs可以格式化MBR和GPT模式的分区
	mkfs.ext3 /dev/sdb1
	mkfs -t  ext4 /dev/sdb2 
	以上两种格式化效果一样
	注：
		1.MBR分区表中扩展分区是无法格式化的，只有主分区和逻辑分区可以格式化
		2.GPT分区用fdisk是无法相看分区表详细信息的只能通过输入parted然后再输入print来查看
挂载分区：没有挂载分区，分区是无法使用的，理论上可以到系统任意位置，一般挂载到/mnt中
	先创建文件：mkdir -p /mnt/imooc
	挂载：mount 分区表 挂载位置   例mount /dev/sdb1 /mnt/imooc
	卸载：umount 挂载位置  例：umount /mnt/imooc
	通过mount挂载的分区不具有永久性，重启后失效
	永久：编辑 /etc/fstab文件
	vi + /etc/fstab
	/dev/sdb1(分区表)    /mnt/imooc(挂载位置)   ext3(文件系统类型)   defaults   0   0 (后面三个就这样写)
	
添加swap分区 步骤  1.建立一个普通的Linux分区 2.修改分区类型的16进制编码 3.格式化交换分区 4.启用swap分区
	fdisk  /dev/sdb
	t  改变分区的系统id
	L  列出16进制码
	82  Linux swap
	mkswap /dev/sdb6 格式化分区表 sdb6
	swapon /dev/sdb6 启用swap分区
	free   查看swap分区
	swapoff /dev/sdb6 停止swap分区
	
33.数据同步写入磁盘： sync
