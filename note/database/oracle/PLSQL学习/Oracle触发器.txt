触发器：
	每当一个特定的数据操作语句(insert,update,delete)在指定的表上发出时，Oracle自动地执行触发器中定义的语句序列。
1.触发器的应用场景：
	a)复杂的安全性检查
	b)数据的确认 如：涨工资少了不可以
	c)数据库审计 
	d)数据的备份和同步
2.触发器类型
	a)语句级 针对表
	b)行级   针对行  for each row ,在行级触发器中使用:old 和:new 伪记录变量，识别值的状态，代表的是同一行记录
创建触发器：
	create [or replace ] trigger 触发器名
	{before|after}
	{delete|insert|(update [of 列名])}
	on 表名
	[for each row [where 条件]]
	plsql 块
	
	例：
	create trigger sayHello
	after insert 
	on emp 
	declare
	begin
		dbms_output.put_line('Hello');
	end;
	/
	
	例：
	
	应用场景一复杂的安全性检查：禁止在非工作时间插入数据
	select to_char(sysdate,day) in ('星期六','星期日');//查询周六，周日
	select to_number(to_char(sysdate,'hh24')) not between 9 and 18 ;//查询上班前和下班后
	
	create or replace trigger securityemp
	before insert
	on emp
	begin
		if to_char(sysdate,day) in ('星期六','星期日') or
		to_number(to_char(sysdate,'hh24')) not between 9 and 18 then 
		raise_application_error(-20001,'禁止在非工作时间插入数据'); //-20000 ~ -20999自己定义的错误码
	end;
	/
	
	应用场景二数据的确认：涨工资不能越涨越少
	create or replace trigger checksalary
	before update
	on	emp
	for each row
	begin
		if :new.sal <:old.sal then 	
		raise_application_error(-20002,'涨后的薪水:'||:new.sal||'不能小于涨前的薪水:'||old.sal)
	end;
	/
	
	应用场景三数据库的审计：给员工涨工资，当涨后工资大于6000的时候，审计员工的信息
	create or replace trigger do_audit_salary
	after update
	on emp
	for each row
	begin
		if :new.sal >6000 then
		insert into new_table values(:new.empno||' '||:new.ename||' '||:new.sal);
	end;
	/
	
	应用场景四数据的备份和同步：当给员工涨完工资后自动备份新的工资到备份数据库中
	
	create or replace trigger sync_salary
	after update
	on emp
	for each row 
	begin
		--当主表更新后，自动更新备份表
		update emp_back set sal = :new.sal where empno = :new.empno;
	end;
	/