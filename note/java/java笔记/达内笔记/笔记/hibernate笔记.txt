1.什么是Hibernate
	Hibernate是数据访问层的框架，对JDBC进行了封装，是针对数据库访问提出的面向对象的解决方案
2.Hibernate的作用
	Hibernate可以直接访问对象，Hibernate自动将此访问转换成SQL执行，从而达到间接访问数据库的目的，简化了数据访问层的代码开发。
3.Hibernate与JDBC对比
	使用JDBC有以下缺点：
		需要编写大量的SQL语句
		需要给大量的?参数赋值
		需要将ResultSet结果集转换成实体对象
		SQL中包含特有函数，无法移植
	使用Hibernate 可以解决上述问题
		自动生成SQL语句
		自动给?参数赋值
		自动将ResultSet结果集转换成实体对象
		采用一致的方法对数据库操作，移植性好
4.Hibernate与MyBatis对比
	共性：
		对JDBC进行了封装
		采用ORM思想解决了Entity和数据库的映射问题
	MyBatis:
		MyBatis采用SQL与Entity映射，对JDBC封装程度较轻
		MyBatis自己写SQL，更具有灵活性
	Hibernate:
		Hibernate采用数据库与Entity映射，对JDBC封装程度较重
		Hibernate自动生成SQL，对于基本的操作，开发效率高
		
5.ORM思想
	ORM：Object Relation Mapping 对象关系映射，java对象和关系数据库之间的映射。
	ORM思想就是将对象与数据库数据进行相互转换的思想，不同的框架／技术实现ORM的手段不同，但更多的是采用配置+反射的方式来实现ORM。

6.Hibernate体系结构
	主配置文件
		hibernate.cfg.xml:该文件中可以配置数据库连接参数，Hibernate框架参数，及映射关系文件
	实体类
		实体类是与数据库表对应的Java类型，它是用于封装数据库记录的对象类型。
	映射关系文件
		实体类.hbm.xml(放于实体类相同的路径下)指定了实体类和数据表的对应关系，以及类中属性和表中字段之间的对应关系。
	底层API
		主要是对映射关系文件的解析，根据解析出来的内容，动态生成SQL语句，自动将属性和字段映射。
	常用API：
		Configuration
			负责加载主配置文件信息，同时也加载映射关系文件信息
		SessionFactory
			负责创建Session对象
		Session
			数据库连接会话，负责执行增删改操作。
		Transaction
			负责事务控制
		Query
			负责执行特殊查询
7.Hibernate使用步骤
	1.导入Hibernate包，以及数据库驱动包
	2.引入Hibernate主配置文件hibernate.cfg.xml
	3.创建实体类
	4.创建映射关系文件
	5.使用Hibernate常用API执行增删改查操作。
	
