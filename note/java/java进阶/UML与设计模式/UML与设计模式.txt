1.用例图
	UML表示与代码表示：
	依赖(虚线):一个类是另一个类的函数参数或函数返回值
	关联(实线):一个类是另一个类的成员变量
	聚合(空心菱形实线):整体与部分的关系(车与发动机)
	组合(实心菱形实线):生命体，整体与部分的关系(人与大脑)
2.设计模式基本原则
	1.开闭原则(重要)：类的改动是通过增加代码进行的，而不是修改原代码。
	2.单一职责原则：类职责单一，对外只提供一种功能
	3.依赖倒置原则(重要)：依赖于接口，而不要依赖于具体的实现
	4.接口隔离原则：不要强迫客户依赖他们不需要的接口，一个接口应该只提供一种对外的功能，不要把多操作封装到一个接口中。
	5.里氏替换原则：任何抽象类出现的地方，都可以用它的实现类进行替换。
	6.迪米特法则(重要)：一个对象应当对其它对象尽可能少的了解，从而联降低各个对象之间的耦合。
	7.优先使用组合而不是继承
