第一章 基础
1.linux版本
	内核版本 https://www.kernel.org/
	内核版本说明 2.6.18    2：主版本，6：次版本 ，18：末版本
	发行版本

2.开源软件
使用的自由
研究的自由
散布及改良的自由

3.查看网站的服务器 http://www.netcraft.com/

4.手机管理linux 下载软件 quicksshd

5.Android采用分层的架构，分为四层，
从高层到底层分为应用程序层，应用程序框架层，系统运行库层和Linux核心层。

6.Linux与Windows的不同
Linux严格区分大小写
Linux中所有内容以文件形式保存，包括硬件，即一切内容皆文件。
Linux不靠扩展名区分文件类型，靠权限区分
Windows下的程序不能直接在Linux中安装和运行

7.linux分区分类
主分区：最多只有四个
扩展分区：
	扩展分区只能有一个
	扩展分区加主分区最多只能有四个
	扩展分区不能写入数据，只能包含逻辑分区
逻辑分区

8.格式化
目的是为了写入文件系统
linux分区做了两件事：
a.把整个分区分成等大小的数据块，默认为4KB但是可以改
b.在分区列表中建立二维表格，写的是i节点，修改时间，权限

9.设备文件名
/dev/sda1 sd:scsi硬盘接口或sata硬盘接口；a 代表第几个硬盘 a b c ... 1：代表第一个分区

10.挂载
必须分区：/（根分区），swap分区 （交换分区,内在的两倍，内在4G以内两倍，4G以上相等就可以）

11.linux中文插件  zhcon

第二章 常用命令
1.ls
ls [选项] [文件或目录]
-a 显示所有文件
-l 显示详细信息
-d 显示目录
-h 人性化显示文件大小
-i 显示inode

2.权限
-rw-r--r--
-文件类型(-文件 d目录 l软链接)(只有七种)
rw-        r--        r--
u所有者    g所属组    o其他人
r读		   w写     x执行
-rw-r--r--. 1 root    root      12877   5月   2 06:44 install.log
权限		   所有者  所属组    大小   

3.创建目录
mkdir -p [目录名]
-p 递归创建
英文 make directories

4.切换目录
cd  [目录]
cd 或 cd ~ 进入家目录
cd .. 进入上一级目录
cd - 进入上次目录

5.查询所在目录位置
pwd 
英文愿意：print working directory

6.删除目录 rmdir
删除文件
rm [选项] [文件]
英文愿意 remove
rm -rf test
-r 删除目录
-f 强制

7.复制
cp [选项] [源] [目录]
英文愿意 copy
-r 复制目录
-p 带文件属性复制
-d 若源为链接文件，则复制链接属性
-a 相-pdr

8.剪切或重命名
mv [源] [目标]
move

9.链接命令
ln -s [原文件] [目标文件]
-s 创建软连接
注：创建软链接，原文件要写绝对路径
硬链接：
拥有相同的i节点和存储block块，可看作是同一个文件
通过i节点识别
不能跨分区
不能针对目录使用
软链接：
类似windows快捷方式
拥有自己的i节点和block块，数据块中只保存原文件的文件名和i节点号
修改任意文件，另一个都改变
删除原文件，软链接不能使用

10.查询文件
locate 文件名
搜索数据库位置：/var/lib/mlocate
更新数据库 updatedb			
配置文件 locate和whereis和which
/etc/updatedb.conf

11.搜索命令的命令
whereis ls
which ls
whoami
whatis ls

12.搜索命令
find [搜索范围] [搜索条件]
find / -name install.log 搜索文件一模一样，除非使用通配符 * ？ []
-iname 不区分大小写
-user 按所有者搜索 find /root  -user root
-nouser 查找没有所有者的文件 
-atime 文件访问时间
-ctime 改变文件属性
-mtime 修改文件内容
-10 10天内修改
10 10天当天修改
+10 10天前修改
-size  k为小写 M 为大写 
-25k 小于25KB
25k  等于
+25k 大于
-inum 22222 找i节点
-a and
-o or
find /etc -size +20k -a size -50k
-exec ls -lh {} \; 固定写法 -exec 其它命令 {} \; 其它命令要能处理搜索出来的文件才可以
加了-exec后把前面搜索的文件交给后面的命令处理

13.搜索字符串命令
grep [选项] 字符串 文件名
-i 忽略大小写
-v 排除指定字符串
其中，find为完全匹配可用通配符匹配，系统中搜索文件
grep是包含匹配可用正则表达式匹配，文件中搜索字符串

14.帮助命令
man 命令
英文愿意manual
man -f 相当于 whatis 
举例：
man -5 passwd
man -4 null
man -8 ifconfig
man -k 相当于 apropos 

15.help shell内部命令
whereis cd 确定是否是内部命令
man 查看的是shell外部命令
info查看详细信息

16.压缩格式
zip 
zip 压缩文件名 源文件   --压缩文件
zip -r 压缩目录名 源目录  --压缩目录
unzip 压缩文件  --解压缩
.gz 
gzip 源文件  --压缩为.gz文件 源文件会消失  -r 压缩目录，但是不会压缩目录，会压缩目录中所有文件
gzip -c 源文件 > 压缩文件
gzip -d 压缩文件  --解压缩文件
gunzip 压缩文件   --解压缩文件 -r解压缩目录 ，目录中全是压缩文件
.bz2
bzip2 源文件  --压缩为.bz2 不保留源文件，-k 保留压缩文件 ，不能压缩目录
bunzip2 压缩文件  --解压缩 -k 保留压缩文件 

.tar.gz
tar -cvf 打包文件名 源文件  -- 打包文件 -c 打包 -v显示过程 -f 指定打包后的文件名 -r append追加
如 tar -cvf test.tar  test 
tar -xvf 打包文件名 --解打包文件 -x 解打包
如 tar -xvf test.tar 

.tar.bz2 
tar -jcvf 压缩包名.tar.bz2 源文件 --压缩文件 -j 压缩为.tar.bz2格式
tar -jxvf 压缩包名.tar.bz2   --解压缩 -x 解压缩.tar.bz2格式

.tar.gz
tar -zcvf 压缩包名.tar.gz 源文件  --压缩文件 -z 压缩为.tar.gz格式
tar -zxvf 压缩包名.tar.gz    --解压缩 --x 解压缩.tar.gz格式 
可压缩多个文件 源文件用空格隔开即可，其它同理

指定解压缩位置 -C 目标位置
如: tar -jxvf test.tar.bz2 -C /tmp/    --注意-C的位置不能写在前面

-t 为test 
如： tar -jtvf test.tar.bz2   --只是查看能解压成 什么样的文件

--------tar 解压多个文件
1. for查询：
for tar in *.tar.gz; do tar xvf $tar; done
2. 列出文件列表，然后xargs 逐一解压：
ls *.tar.gz | xargs -n1 tar xzvf
3. 用find 条件查找（目录1层，名字带.bz2扩展）解压：

find -maxdepth 1 -name "*.bz2"|xargs -i tar xvjf {} 





17.关机和重启
shutdown [选项] 时间
-c 取消前一个关机命令
-h 关机
-r 重启
halt
poweroff
init 0 
reboot
init 6

18.查看系统运行级别
runlevel 
N 3    上一个级别  当前级别

19.退出
logout

20.挂载光盘
mount  --查询系统中已经挂载的设备
mount -a 依据配置文件/etc/fstab的内容，自动挂载,在该文件中添加如下一行，可实现永久挂载
/dev/sr0  /mnt/cdroom1  udf,iso9660 defaults 0 0
/dev/sr0  /mnt/iso  iso9660    defaults 0 0
/dev/sdb2     /mnt/sdb2             ext4    defaults  0 0
或者在/etc/rc.local中添加 /bin/mount（最后是命令的绝对路径） /dev/sdb2 /mnt/sdb2 也可以实现永久挂载
或者使用 sudo blkid /dev/sda3 查看其uuid，再在/etc/fstab文件中加入如下
UUID=d8b22fb1-2365-412e-a55b-abb429b815d2 /mnt/sdb6 ext4 defaults 0 0  也可以实现永久挂载
mount [-t 文件系统] [-o 特殊选项] 设备文件名 挂载点
-t 文件系统：加入文件系统类型来指定挂载的类型，可以是ext3，ext4，iso9660(光盘)等文件系统
如： mount   /dev/sr0 /mnt/cdrom/  --没有 特殊权限，系统默认会指定文件系统
卸载：umount 设备文件名或挂载点
如：umount /mnt/cdrom/ 或 umount /mnt/sr0
卸载命令不是可有可无的，必需卸载，用完之后请卸载


21.挂载U盘
fdisk -l --查看U盘设备文件名
mount -t vfat /dev/sdb1 /mnt/usb/   --linux默认不支持ntfs系统，vfat为默认的fat32系统只支持不超过4G的文件

22.查看用户登陆信息
w 
who 
last --判断系统中所有登陆信息  查看的是/var/log/wtmp 文件数据
lastlog --查看所有用户的最后一次登陆时间

23.查看shell $SHELL
shell中可以调用子shell 用exit退到八shell

24.shell脚本
echo 输出 :echo -e "\e[31m   内容 \e[0m "
30m = 黑色	31 红色	32绿色  33 黄色
34  蓝色   35  洋红   36  青色   37  白色

25.脚本执行方法
bash 脚本 
./脚本    --这种方式要赋于执行权限

26.别名
alias 查看别名
alias vi = 'vim' --别名设定，临时
vi ~/.bashrc   --永久 ，重新登陆或 source ~/.bashrc 
unalias 别名    --删除别名

27.命令执行顺序
绝对路径或相对路径
别名 
bash的内部命令
环境变量配置的命令

28.一些快捷键
ctrl + c 强制终止
ctrl + l 清屏
ctrl + a 光标移动到行首
ctrl + e 光标移动到行尾
ctrl + u 从光标所在位置删除到行尾
ctrl + z 把命令放入后台
ctrl + r 在历史命令中搜索

29.历史命令
位置： ~/.bash_history
history 
-c 消除历史
-w 强制写入历史到文件
	
30.历史调用
上下箭头调用
!n 重复执行第n条历史命令
!! 重复执行上一条历史命令
!字符串 重复执行最后一条以该串开头的命令

31.输入输出
设备      设备文件名	  文件描述符      类型
键盘      /dev/stdin       0              标准输入
显示器    /dev/stdout      1              标准输出
显示器    /dev/stderr      2              标准错误输出

32.标准输出重定向
类型              符号                 作用
标准输出重定向	   命令 > 文件          覆盖，正确
标准输出重定向      命令 >> 文件        追加，正确
标准错误输出重定向   错误命令 > 文件     覆盖，错误
标准错误输出重定向    错误命令 >> 文件    追加，错误

标准正确输出  ls >> test.log --有空格 >  >>
标准错误输出  ls 2>>test.log --无空格 2>  2>>
正确和错误同时输出：
命令 > 文件 2>&1   --覆盖，正确，错误，同一文件
命令 >> 文件 2>&1  --追加，正确，错误，同一文件
命令 &>文件        --覆盖，正确，错误，同一文件
命令 &>>文件       --追加，正确，错误，同一文件
命令>>文件a 2>>文件b   	--正确文件a，错误文件2，追加
错误输出>或>>号两测都没有空格

应用：ls &>/dev/null  --黑洞，消失

33.输入重定向
wc [选项] [文件名]
-c 统计字节数
-w 统计单词
-l 统计行数
ctrl + d  查看 
wc < 文件名 --同wc 文件名

34.多命令顺序执行
; : 命令1;命令2;...  --多个命令顺序执行，命令之间没有关系。
&&: 逻辑与，命令1&&命令2&&... --命令1正确执行，命令2才执行
||：逻辑或，命令1||命令2||... --命令1执行错误，命令2才执行
例： ls && echo yes || echo no  --用来 判断命令是否正确执行

35.管道符
| ： 命令1 | 命令2  --命令1正确执行命令2才执行，且命令1的正确输出作为命令2的操作对象
应用：netstat -an | grep ESTABLISHED | WC -l 

36.通配符 
? * [] [-] [^]

37.bash中的其它特殊字符
'' 单引号，在单引号中的其它特殊字符没有意义
"" 双引号，在双引号中的特殊符号没有特殊含义，但是 $ ` \ 是例外
拥有 调用变量值，引用命令，和转义符的特殊含义
``反引号 ，反引中括起来的是系统命令，bash会先执行它，和$()的作用一样
不过，推荐使用$(),反引号容易看错
$(),引用系统命令
# 脚本中#开头的代表注释
$ 用于调用变量的值
\ 转义符

-------------------------补充
1.cat  将某个文件的内容输出到屏幕或是另一个文件 
    权限：所有用户
    	-n 由 1 开始对所有输出的行数编号
    	-b 同上但空白行不编号
    	-s 连续两行以上的空白行,就代换为一行的空白行，不编号
    	-v 不修改输出
    示例：
	cat -n textfile1 > textfile2 输出到文件textfile2
	cat -n textfile1 输出到控制台
2.