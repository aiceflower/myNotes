src
	-main
		-java
			-package
	-test
		-java
			-package
	resources
	
	mvn -v 查看maven版本
	compile 编译
	test 测试
	package 打包
	
	clean 删除target
	install 安装jar包到本地仓库中
	
	创建目录的两种方式
	1.	archetype:generate 按照提示进行选择
	2.  archetypegennerate 
		-DgroupId = 组织名
		-DartifactId 项目名-模块名
		-Dversion=版本号
		-Dpackage=代码所有的包名
	
	坐标   
		构件
	仓库
		本地仓库和远程仓库
	镜像仓库settings.xml中
	<mirror>
      <id>maven.net.cn</id>
      <mirrorOf>central</mirrorOf>
      <name>central mirror in china</name>
      <url>http:://maven.net.cn/content/groups/public</url>
    </mirror>
	更改仓库位置settings.xml中
	<localRepository>仓库位置</localRepository>
	
	完整项目的构建过程包括：
	清理、编译、测试、打包、集成测试、验证、部署。
	maven的生命周期：clean、compile、test、package、install执行后面的时候前面的会依次执行
	clean 清理项目
		pre-clean执行清理前的工作
		clean清理上一次构建生成的所有文件
		post-clean执行清理后的文件
	default 构建项目（最核心）
		compile test package install
	site 生成项目站点
		prep-site 在生成项目站点前要完成的工作
		site 生成项目的站点文档
		post-site 在生成项目站点后要完成的工作
		site-deploy 发布生成的站点到服务器上
		
	pom的常用元素：
		modelVersion指定了当前pom的版本,必需的
		groupId主项目标识,反写的公司网址+项目名 
		artifactId项目名+模块名 
		version当前项目的版本号
			第一个0代表大版本号
			第二个0表示分支版本号
			第三个0表示小版本号
			0.0.1
			snapshot快照
			alpha内部测试
			beta公测
			Release稳定
			GA正式发布
		packaging 默认是jar  war zip pom
		name 项目描述名
		url	项目地址
		description 项目描述
		licenses许可证
		
		<dependencies>依赖列表
			<dependency>依赖项
				<groupId>
				<artifactId>
				<version>
				<type>
				<scope>依赖范围 
					compile 默认范围，对于编译，测试，运行都有效 
					provided编译，测试 servlet
					runtime测试，运行  jdbc驱动
					test测试	junit
					system编译，测试 与本机系统相关，可移植性差
					import引入其它依赖中的依赖
				<optional>设置依赖是否可选 true false
				<exclusions>去除依赖传递
					<exclusion>
					依赖冲突
					1.短路优先
					A-->B-->C-->X(jar包)
					A-->D-->X
					2.路径相同，先声明先优先
					
		<dependencyManagement>依赖管理
			<dependencies>
				<dependency>
		与继承
				
		<build>
			<plugins>插件列表
				<plugin>
					<groupId>
					<artifactId>
					<version>
					
		<parent>
		
		<modules>聚合，例可将几个同时打包放入仓库中
			<module>
maven添加本地jar包到本地maven库：
切换到本地jar包所在的路径下执行如下命令：	
		mvn install:install-file -Dfile=datachannel-1.0.jar -DgroupId=datachannel -DartifactId=datachannel -Dversion=1.0 -Dpackaging=jar
添加依赖：
 <dependency>
    <groupId>datachannel</groupId>
    <artifactId>datachannel</artifactId>
    <version>1.0</version>
</dependency>