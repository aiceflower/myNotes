1.我们日常讨论的h5，其实是一个泛称，它指的是由HTML5+CSS3+javaScript等技术组合而成的一个应用开发平台。
2.检验代码规范
	W3C验证地址
	 https://validator.w3.org
3.第一行的DOCTYPE指示浏览器如何解析我们的HTML
	h5的语法在规范上更简洁，更宽松
4.h5新增的主义标签(使用方法与普通标签一样，只是体现主义，方便搜索引擎去搜索，理解)
	<nav> //导航，等价于<div class="nav">，下面的也类同
	<header> //页眉
	<footer> //页脚
	<section> //区块
	<article> //文章
	<aside> //侧边栏
	<progress> //进度条
	<audio> //音频
	<video> //视频
5.兼容性处理(低版本的浏览器不支持h5，如ie8)	
	使用<header>无法被ie8识别
	解决：
		1.创建标签(太麻烦，不可取)
		document.createElement("header");
		再设置header的display属性为block
		2.引入第三方的库
			html5shiv.min.js
			通过这种方式引入有一个问题，除了ie其它浏览器本来就支持，但也引入了
			解决：(只有ie浏览器识别如下，小于ie8生效)
				<!--[if lte ie8]>
					<script src="html5shiv.min.js"></script>
				<![endif]-->
6.微数据：以上是通过标签让搜索引擎识别，微数据是通过属性让其识别
	更友好的做法：这些属性在"地址"中定义,itemscope标识为一个整体块
	<div itemscope itemtype="	http://data-vocabulary.org/Review">
		<span itemprop="reviewer">developer</span>
		<span itemprop="dtreviewed" datatime="2012-02-06T22:23:22.50+08:00">2012年2月六日22:23</span>
		<span itemprop="description">评论内容</span>
	</div>
7.<audio> controls autoplay loop
	兼容处理
		<audio>
			<source src="test.mp3">
			<source src="test.wav">
			<source src="test.ogg">
			浏览器不支持h5音频
		</audio>
	<video>宽高设置一边，另一边会自动按比例缩放，兼容处理同上
8.表单(label的作用点击文字也可以让光标定位到输入框，当然要指定for属性)
	<form action="">
		<fieldset>
			<legend>输入类型</legend>
			<label for="demo">
				email: <input type="text" id="demo"/>
			</label>
		</fieldset>
	</form>
9.h5表单
	输入类型
		/*原有的
		text
		password
		radio
		checkbox
		file
		button
		submit
		reset
		*/
		email 邮箱
		tel 手机号
		url	url格式
		number 数字格式 step min max属性
		search 搜索框(体现语义)
		range	自由拖动滑块 value
		color 拾色器
		time
		date
		datetime
		month
		week
	部分浏览器不支持
	表单元素
		/*
		input
		textarea
		select
		*/
		datalist 数据列表,可实现输入框模糊查询
		keygen 生成加密字符串
		output 输出结果
		meter 度量器 low="60" max="80" value="80" ,value不同显示的颜色不同
		课程<input type="text" list="data">
		<datalist id="data">
			<option value="java">java</option>
			<option value="javascript">javascript</option>
			<option value="php">php</option>
			<option value="python">python</option>
		</datalist>
	表单属性
		placeholder 提示点位符 <input type="text" placeholder="请输入内容" />
		autofocus 自动获得焦点 <input type="text" autofocus="autofocus" />
		multiple 多文件上传 <input type="text"  multiple="multiple" />
		autocomplate 自动完成 <input type="text" autocomplate="off" /> 默认为on,设置到form中对所有起作用
		form  <input type="text" form="某表单id" /> 表单元素可出现在form外加上这个属性就可以提交数据了
		novalidate 关闭验证 <input type="text" placeholder="请输入内容" /> 如email number
		required 必需填
		pattern 自定义验证
10.DOM扩展
	获取：
		1.document.getElementsByClassName('c1');
		2.document.querySelector(".c1");//参数是css选择器，获致符合条件的第一个元素
		3.document.querySelectorAll(".c1");//同上，获取全部元素
	类名操作：
			Node.classList.add();添加一个类名
			Node.classList.remove();删除一个类名
			Node.classList.contains();检测是否存在一个类名
			Node.classList.toggle();切换一个类名，有则删除，无则添加
			Node是一个有效的DOM节点，是一个通称
	自定义属性：
		格式data-*,如data-name,data-id,符合这种格式的才叫自定义属性
		Node.dataset获取所有的自定义属性，
		Node.dataset.name,获取属性,注意这里是name而不是data-name
		Node.dataset.name='local';设置自定义属性，这里是name而不是data-name,但添加后属性名为data-name
		如果是data-my-name,则属性为myName,获取的时候注意下，设置则反之
11.你不知道的快捷键
	1.alt+方向键上，资源管理器中跳到上一级目录
	2.win+上键最大化
	3.调整为性能最佳
		控制面板-->性能信息和工具-->调整视觉效果-->调整为最佳性能
	4.ctrl+esc打开开始
	5.ctrl+f4关闭当前端口而不是关闭所有浏览器
	6.浏览器快速刷新ctrl+r
12.subline3,auom,webstorm,vs code(智能提示强大)下载
	http://pan.baidu.com/s/1ntszCgT
13.为什么html会有htm的后缀
	早期的dos 8 位机的时代，电脑只识别3个字母的后缀名文件，所以html的后缀为htm
14. //subline的快捷键
	1.html:5 tab html:4s tab html:4t tab html:xt tab
	2.span{我是span标签$}*3 (emmet)
15.img的属性alt图片加载不出来提示，title鼠标移动到图片上提示
16.sub,sup上下标签，h2o,2的3次方
17.webApp
	pc转移动解决
	1.流式布局(不使用固定宽度，使用百分比进行设置宽度)
	2.设置meta，设置viewport只有移动端可以识别
		<meta name="viewport" >//紧跟在设置编码的meta后，让浏览器早知道这是移动端
		width=device-width,//viewport宽度
		initial-scale=1.0,初始缩放比，大于0的数字
		maximum-scale最大缩放比
		minimum-scale最小缩放比
		user-scalable用户是否可以缩放 0 no 1 yes
		标准的移动web页面设置:
		<meta name="viewport" content="width=device-width,initial-scale=1.0,user-scalable=0" />
	3.去掉移动端特有的点击高亮效果(也可设置成其它颜色)
		-webkit-tab-highlight-color:transparent;
	4.移动端的盒子都以边框开始计算
		-webkit-box-sizing:border-box;//兼容
		box-sizing:border-box;//设置所有的都是以边框开始计算宽度，百分比
18.移动端基本样式设置base.css
	/* reset css */
	*,
	::before,
	::after{
		/*选择所有的标签*/
		margin:0;
		padding:0;
		/*去掉移动端特有的点击高亮效果*/
		-webkit-tab-highlight-color:transparent;
		
		/*设置所有的都是以边框开始计算宽度，百分比*/
		-webkit-box-sizing:border-box;//兼容
		box-sizing:border-box;
	}
	body{
		font-size:14px;
		font-family:"Microsoft YaHei",sans-serif;/*设置默认字体，如果没有则设置为本身默认*/
	}
	a{
		color:#333;
	}
	a:hover{
		text-decoration:none;
	}
	
	/* base css  */
	input{
		border:none;
		outline:none;
		-webkit-appearance:none;/*清除移动端默认的表单样式*/
	}
	.f_left{
		float:left;
	}
	.f_right{
		float:right;
	}
	.clearfix::before,
	.clearfix::after{
		content:"";
		height:0;
		line-height:0;
		display:block;
		visibility:hidden;
		clear:both;
	}