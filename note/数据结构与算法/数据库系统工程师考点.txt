1.中断的概念
	中断就是打断CPU正在执行的工作，让CPU去处理其它更加重要的任务，发起中断的事务称为中断源
	中断源：I/O设备，实时时钟，故障源、软件中断等
2.中断分类内部中断和外部中断
	内部中断：cpu内部产生的中断，在pc中内部中断又分为溢出中断、除零错中断、断点中断、软件中断及单步中断。
	外部中断：中断源来自cpu之外。外部中断按cpu的响应时间可分为可屏蔽中断和非可屏蔽中断。非屏蔽中断是cpu
		一定要响应的中断。通常是计算机发生了紧急情况如停电
		可屏蔽中断大多是外设和时钟中断。在计算机处理一些不应该打断的任务时，可以通过屏蔽位来不响应这些中断。
3.中断处理
	中断响应时间
		发出中断请求到中断处理程序开始执行之间的时间差。
	中断处理时间
4.指令流水线把一条指令分为取指，分析和执行一部分
	流水：指令全部执行所需时间 >1+>2+>3+(n-1)>j    >j最长时间
	操作周期：取流水线中耗时最长的那个部分所需要的时间作为操作周期
	第一条维完成需要，n*周期,n为指令部分
	串行：(>1+>2+>3)*n
5.原码、反码、补码、移码
	原码：最高位是符号位(0:正数，1:负数)，其它们以绝对值呈现
	反码：正数的反码与原码相同，负数的反码符号位是1，其余各位为该数绝对值的原码按位取反
	补码：正数的补码与原码相同，负数的补码是该数的反码加1
	移码：在补码的基础上把首位取反	得到的，适合于阶码的运算
6.操作数的寻址
	隐含寻址
	立即寻址：指令的地址字段指出的不是操作数的地址，而是操作数本身
	直接寻址：指令的地址字段指出的操作数在内存的地址
	间接寻址：指令地址字段中的形式地址D不是操作数的真正地址，而是操作数地址的指示器
	寄存器寻址：操作数不是放在内存中而是放在突寄存器中。寄存器的内容是操作数
	寄存器间接寻址：寄存器的内容是操作数的地址
	相对寻址：计数器Pc的内容加上指令格式中的形式地址D而形成的地址,程序计数器
	基址寻址：基址寄存器的内容加上指令格式中形式地址而形成的地址，基址寄存器
	变址寻址：cpu中某个变址寄存器的内容与偏移量D相加而形成的地址，变址寄存器
	块寻址：在指令中批出块的地址，和数据的长度  操作码|首地址|标志位|末地址
	段寻址：基地址+寄存器提供的16位偏移量形成的地址
7.计算机控制器构成
	指令寄存器IR、程序计数器PC、程序状态字寄存器PSW、时序部件和微操作形成部件
8.RISC设计遵循的原则
	指令条数少
	寻址方式尽可能少
	采用等长指令
	尽可能多的通用寄存器
9.系统响应时间:用户发出完整请求到系统完成任务给出响应的时间间隔
	作业吞吐量：单位时间内系统完成的任务量 
10.哈夫曼树
	1.建树
		从小到大依次排序，作为叶结点，把最小的结点值相加，形成一个新结点。以这个结点的值与其他结点的值比较，仍旧取最小的两个结点值合并产生新的结点，直到最终合并为一个根。
	2.编码
		从根结点开始向下，几左边分支都编为1，右边编为0，则从根结点到叶结点的一条路径上的编码组合就是该指令的哈夫曼编码。
11.等长编码指令2的n次方刚好大于指令数
	平均码长：结点深度(码长)乘以频度再累加
12.算术移位：左移在空位补0，右移则补符号位。
	逻辑移位：无论左移右移都补0
	循环移位：把移动空位由移出的位来填补的移位，又分带符号位移动的大循环和不带符号位移动的小循环。
	其中算术左移等于做乘2的操作，而算术右移等于除2 的操作。
	程序计数器是一个指针，控制器从这里取得指令的地址，再从内在中得到指令。
13.特权指令：启动I/O等的一类可能影响系统安全的指令定义为特权指令。
14.影响流水线效率的因素：
	1.条件转移指令(存在转移指令，只有在这条指令执行完成后，才能判断下一条指令是什么)
	2.资源共享(相邻的指令对同一资源进行操作)
	3.寄存器相关(相邻的指令使用了相同的寄存器)
	4.中断系统(同条件转移指令类似)
15.RISC(Reduced Instruction Set Computing)精简运算指令集计算机
   CISC(Complex Instruction Set Computing)复杂指令集计算机
   相对于RISC，CISC的指令位数较长。
   RISC的特征：
	a.指令各类少，指令格式规范
	b.寻址方式简化
	c.大量利用寄存器间操作（寄存器堆结构）
	d.简化处理器结构
	e.便于使用VLSI技术(多处理器技术)
	f.加强了处理器并行能力
	g.优化的编译器
16.CISC与RISC比较 p28习题7
	比较内容			CISC				RISC
	指令系统			复杂，庞大			简单精简
	指令数目			一般大于200			一般小于100
	指令格式			一般大于4			一般小于4
	指令方式			一般大于4			一般小于4
	指令字长			不固定				等长
	可访存指令			不加限制			只有LOAD/STORE指令
	各种指令使用频率	相差很大			相差不大
	各种指令执行时间	相差很大			绝大多数在一个周期内完成
	优化编译实现		很难				较容易
	程序源代码长度		较短				较长
	控制器实现方式		绝大多数为微程序控制 绝大多数为硬布线控制
	软件系统开发时间	较短				较长
17.DMA(Direct Memory Access)直接存储器存取
	dma方式可以使得数据从I/O          模块到主存的传输过程中，无需CPU的中转，这个工作转移给了DMA控制器(DMAC)来完成，实现调整的数据传输。
	//TODO DMA p25
18.